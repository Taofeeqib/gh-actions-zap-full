name: ZAP-Test

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f "app/requirements.txt" ]; then
            pip install --no-cache-dir -r app/requirements.txt
          else
            echo "app/requirements.txt not found. Exiting."
            exit 1
          fi
          pip install --no-cache-dir zaproxy==0.4.0
          
      - name: Install JSON tools
        run: sudo apt-get install -y jq
          
      - name: Build Docker Image
        run: |
          echo "Dockerfile contents:"
          cat Dockerfile
          
          docker build -t vulnerable-app .
          
      - name: Run Docker Container
        run: |
          docker run -d --name vuln-app -p 5050:5050 vulnerable-app
          
          sleep 30
          
          echo "Docker container logs:"
          docker logs vuln-app

          echo "Docker container status:"
          docker ps -a
          
          echo "Testing application accessibility:"
          curl -I http://localhost:5050 || echo "Warning: App may not be running properly"
          
          echo "Trying a simple GET request:"
          curl -v http://localhost:5050/ || echo "Warning: GET request failed"
          
      - name: Install OWASP ZAP
        run: |
          mkdir -p ./zap
          cd ./zap
          wget -N https://github.com/zaproxy/zaproxy/releases/download/v2.16.1/ZAP_2.16.1_Linux.tar.gz
          tar -zxvf ZAP_2.16.1_Linux.tar.gz
          rm ZAP_2.16.1_Linux.tar.gz
          cd ZAP_2.16.1/plugin
          wget https://github.com/zaproxy/zap-extensions/releases/download/exportreport-v6/exportreport-alpha-6.zap
          echo 'export PATH_ZAP_SH=./zap/ZAP_2.16.1/zap.sh' >> ~/.bashrc
          echo 'export ZAP_PORT=8090' >> ~/.bashrc
          echo 'sh -c "$PATH_ZAP_SH -daemon -host 0.0.0.0 -port $ZAP_PORT -configfile ./zap/ZAP_2.16.1/conf" > /dev/null &' > start-zap
          echo 'sleep 40' >> start-zap
          echo 'sh -c "$PATH_ZAP_SH -host 0.0.0.0 -port $ZAP_PORT -configfile ./zap/ZAP_2.16.1/conf" > /dev/null &' > start-gui-zap
          echo 'sleep 40' >> start-gui-zap
          echo 'pkill -f zap' > stop-zap
          chmod +x start-zap
          chmod +x start-gui-zap
          chmod +x stop-zap
          echo $PWD
          
      - name: Run ZAP Daemon
        run: |
          ./zap/ZAP_2.16.1/zap.sh -daemon -host 0.0.0.0 -port 8090 -config api.addrs.addr.name=".*" -config api.addrs.addr.regex=true -config api.disablekey=true > /dev/null &
          sleep 60
          curl -I http://localhost:8090/ || echo "Warning: ZAP may not be running properly"
          
      - name: Run Test Automation with ZAP
        run: |
          cd ./tests/
          python e2e_zap.py
          
      - name: Verify ZAP Report Content
        run: |
          echo "Checking ZAP report content:"
          cat ./tests/zap-report.json | grep -v "@generated" | jq
          
      - name: "Upload Report"
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-report
          path: ./tests/zap-report.json